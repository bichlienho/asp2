// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250112070530_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Aboutus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aboutus");
                });

            modelBuilder.Entity("Project.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullname");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SkyMiles")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__Account__3213E83F8F5CF85F");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ho Chi Minh City",
                            Avatar = "",
                            CreateDate = new DateTime(2025, 1, 12, 14, 5, 28, 514, DateTimeKind.Local).AddTicks(7214),
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            Fullname = "Nguyen Van A",
                            Gender = true,
                            IdentityNumber = "",
                            IsActive = true,
                            Password = "$2a$12$Hm559j/qjr.qUw74.94rHuH.Nsac1vfWXP.uRWL6CG2XnyRei4cjy",
                            PhoneNumber = "0837267048",
                            RoleId = 1,
                            SkyMiles = 0,
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ha Noi",
                            Avatar = "",
                            CreateDate = new DateTime(2025, 1, 12, 14, 5, 28, 514, DateTimeKind.Local).AddTicks(8774),
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@gmail.com",
                            Fullname = "Nguyen Van B",
                            Gender = true,
                            IdentityNumber = "",
                            IsActive = true,
                            Password = "$2a$12$Hm559j/qjr.qUw74.94rHuH.Nsac1vfWXP.uRWL6CG2XnyRei4cjy",
                            PhoneNumber = "0353718834",
                            RoleId = 2,
                            SkyMiles = 0,
                            Username = "User"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hai Phong",
                            Avatar = "",
                            CreateDate = new DateTime(2025, 1, 12, 14, 5, 28, 514, DateTimeKind.Local).AddTicks(8779),
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khaih8375@gmail.com",
                            Fullname = "Nguyen Van C",
                            Gender = true,
                            IdentityNumber = "",
                            IsActive = true,
                            Password = "$2a$12$Hm559j/qjr.qUw74.94rHuH.Nsac1vfWXP.uRWL6CG2XnyRei4cjy",
                            PhoneNumber = "0886926492",
                            RoleId = 2,
                            SkyMiles = 0,
                            Username = "User"
                        });
                });

            modelBuilder.Entity("Project.Models.Aircraft", b =>
                {
                    b.Property<int>("AircraftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AircraftID"));

                    b.Property<int>("CabinCount")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AircraftID");

                    b.ToTable("Aircrafts");

                    b.HasData(
                        new
                        {
                            AircraftID = 1,
                            CabinCount = 12,
                            Model = "Airbus A320"
                        },
                        new
                        {
                            AircraftID = 2,
                            CabinCount = 22,
                            Model = "Airbus A321"
                        },
                        new
                        {
                            AircraftID = 3,
                            CabinCount = 32,
                            Model = "Airbus A322"
                        },
                        new
                        {
                            AircraftID = 4,
                            CabinCount = 42,
                            Model = "Airbus A323"
                        },
                        new
                        {
                            AircraftID = 5,
                            CabinCount = 52,
                            Model = "Airbus A324"
                        });
                });

            modelBuilder.Entity("Project.Models.Aircraft_Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("TicketId");

                    b.ToTable("Aircraft_Tickets");
                });

            modelBuilder.Entity("Project.Models.Airport", b =>
                {
                    b.Property<int>("AirportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirportID"));

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("AirportID");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            AirportID = 1,
                            AirportName = "AFF1",
                            City = "Da Lat",
                            CreateDate = new DateTime(2025, 1, 12, 14, 5, 28, 517, DateTimeKind.Local).AddTicks(391),
                            IsActive = true
                        },
                        new
                        {
                            AirportID = 2,
                            AirportName = "AFF2",
                            City = "HCM",
                            CreateDate = new DateTime(2025, 1, 12, 14, 5, 28, 517, DateTimeKind.Local).AddTicks(1721),
                            IsActive = true
                        },
                        new
                        {
                            AirportID = 3,
                            AirportName = "AFF3",
                            City = "Ha Noi",
                            CreateDate = new DateTime(2025, 1, 12, 14, 5, 28, 517, DateTimeKind.Local).AddTicks(1727),
                            IsActive = false
                        });
                });

            modelBuilder.Entity("Project.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TicketClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("FlightId");

                    b.HasIndex("TicketClassId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Project.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TicketClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("FlightId");

                    b.HasIndex("TicketClassId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Project.Models.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Project.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"));

                    b.Property<string>("CityDiscount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("QuantityDiscount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Project.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DescriptionAnswer")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Project.Models.Flight", b =>
                {
                    b.Property<int>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightID"));

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FlightStatusId")
                        .HasColumnType("int");

                    b.Property<int>("FromAirportID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("TicketClassID")
                        .HasColumnType("int");

                    b.Property<int>("ToAirportID")
                        .HasColumnType("int");

                    b.HasKey("FlightID");

                    b.HasIndex("AircraftId");

                    b.HasIndex("FlightStatusId");

                    b.HasIndex("FromAirportID");

                    b.HasIndex("TicketClassID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Project.Models.FlightStatus", b =>
                {
                    b.Property<int>("FlightStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightStatusId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightStatusId");

                    b.ToTable("FlightStatuses");

                    b.HasData(
                        new
                        {
                            FlightStatusId = 1,
                            Description = "Has Created",
                            FlightStatusName = "Scheduled"
                        },
                        new
                        {
                            FlightStatusId = 2,
                            Description = "Booking avaiable",
                            FlightStatusName = "Booking"
                        },
                        new
                        {
                            FlightStatusId = 3,
                            Description = "User have booking can check in",
                            FlightStatusName = "Check in"
                        },
                        new
                        {
                            FlightStatusId = 4,
                            Description = "Flight have delayed",
                            FlightStatusName = "Delay"
                        },
                        new
                        {
                            FlightStatusId = 5,
                            Description = "Flight are ...",
                            FlightStatusName = "On Flying"
                        },
                        new
                        {
                            FlightStatusId = 6,
                            Description = "Flight have finished",
                            FlightStatusName = "Finish"
                        },
                        new
                        {
                            FlightStatusId = 7,
                            Description = "Flight have canceled",
                            FlightStatusName = "Cancel"
                        });
                });

            modelBuilder.Entity("Project.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83F7FAF5CF6");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Project.Models.Ticket", b =>
                {
                    b.Property<int>("TicketClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketClassID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TicketClassID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Project.Models.Account", b =>
                {
                    b.HasOne("Project.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Project.Models.Aircraft_Ticket", b =>
                {
                    b.HasOne("Project.Models.Aircraft", "Aircraft")
                        .WithMany("Aircraft_Tickets")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Ticket", "Ticket")
                        .WithMany("Aircraft_Tickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Project.Models.Booking", b =>
                {
                    b.HasOne("Project.Models.Account", "Account")
                        .WithMany("Bookings")
                        .HasForeignKey("AccId");

                    b.HasOne("Project.Models.Flight", "Flight")
                        .WithMany("Bookings")
                        .HasForeignKey("FlightId");

                    b.HasOne("Project.Models.Ticket", "Ticket")
                        .WithMany("Bookings")
                        .HasForeignKey("TicketClassId");

                    b.Navigation("Account");

                    b.Navigation("Flight");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Project.Models.Cart", b =>
                {
                    b.HasOne("Project.Models.Account", "Account")
                        .WithMany("Carts")
                        .HasForeignKey("AccId");

                    b.HasOne("Project.Models.Flight", "Flight")
                        .WithMany("Carts")
                        .HasForeignKey("FlightId");

                    b.HasOne("Project.Models.Ticket", "Ticket")
                        .WithMany("Carts")
                        .HasForeignKey("TicketClassId");

                    b.Navigation("Account");

                    b.Navigation("Flight");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Project.Models.Flight", b =>
                {
                    b.HasOne("Project.Models.Aircraft", "Aircraft")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.FlightStatus", "FlightStatus")
                        .WithMany("Flights")
                        .HasForeignKey("FlightStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Airport", "Airport")
                        .WithMany("Flights")
                        .HasForeignKey("FromAirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Ticket", null)
                        .WithMany("Flights")
                        .HasForeignKey("TicketClassID");

                    b.Navigation("Aircraft");

                    b.Navigation("Airport");

                    b.Navigation("FlightStatus");
                });

            modelBuilder.Entity("Project.Models.Account", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("Project.Models.Aircraft", b =>
                {
                    b.Navigation("Aircraft_Tickets");

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Project.Models.Airport", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Project.Models.Flight", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("Project.Models.FlightStatus", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Project.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Project.Models.Ticket", b =>
                {
                    b.Navigation("Aircraft_Tickets");

                    b.Navigation("Bookings");

                    b.Navigation("Carts");

                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
